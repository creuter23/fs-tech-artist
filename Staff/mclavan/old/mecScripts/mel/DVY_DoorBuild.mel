/* This file downloaded from Highend3d.com
''  
''  Highend3d.com File Information:
''  
''    Script Name: Davveys Door Generator
''    Author:  
''    Last Updated: Mar 06, 2007
''    Update/Change this file at:
''    http://Highend3d.com/maya/downloads/mel_scripts/modeling/poly_tools/4584.html
''  
''  Please do not alter any information above this line
''  it is generated dynamically by Highend3d.com and will
''  be changed automatically on any updates.
*/

/*

	DVY_DoorBuild;
	
*/

global proc DVY_DoorBuild()
	
{
// ******************************************************************************** //	
//	Global Variables
	
	global string $Units;

	global float $DVYUnit;

// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
//	Local Variables
	
	string $Temp[], $Temps[], $Shader[], $DoorName[], $DoorGrp[];
	string $Type;
	
	float $Sizes[];			// individual Door and Frame sizes
	
	int $a, $b, $c, $i, $j, $k;	
	
	int $Options[];			// Door and Frame Settings and Options
	int $E = $e = $Q = 1;	// Count for Group and Door sections.
	int $HRatio, $VRatio; 	// Integers to set frame configuration.
	int $T = 0;				// Frame Type 0 = Internal, 1 = External.
	int $C = 1; 			// 1 = No Cill, 2 = 100 mm Cill, 3 = 150 mm Cill 4 = 200 mm Cill.
	int $S = 0;				// Hinge Positions 0 = 1 = "LeftHung_", 2 = "RightHung_";
	int $F = 0;				// 0 = Fixed, 1 = Hinged.	
	int $N = 0;				// Number of Doors.
	int $InOut = 0;			// Hinge Opening Direction 0 = Inwards, 1 = Outwards.
	int $Ex = 0;			// Panel Extension options.
	int $P = 0;				// Door Panel Type.
	
// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
//	Error Checking
	
	if (`optionMenu -q -sl DVY_DoorSizeOption` == 1)
		{
			error "Oops!! Please select a Door Sizes and try again. © Davvey..";
		}
	
	
	if ((`optionMenu -q -sl DVY_InternalDoorOption` == 1) &&
		(`optionMenu -q -sl DVY_ExternalDoorOption` == 1))
		{
			error "Oops!! Please select either an Internal or External Door Style and try again. © Davvey..";
		}
	
	if (`optionMenu -q -sl DVY_DoorFrameOption` > 2) 
		{
			if (`optionMenu -q -sl DVY_DoorFrameOption` < 9)
				{
				  if ((`floatFieldGrp -q -v1 DFloatFieldGrp_01`) < `floatField -q -v DFloatField_05` + 150)
					 {
						error "Oops!! Please set Door Frame width Greater than Nominal door Frame size by at least 150 mm. © Davvey..";
					 }
				}
				
			else if (`optionMenu -q -sl DVY_DoorFrameOption` > 8)
				{
				 if ((`floatFieldGrp -q -v1 DFloatFieldGrp_01`) < `floatField -q -v DFloatField_05` + 300)
					{
						error "Oops!! Please set Door Frame width Greater than Nominal door Frame size by at least 300 mm. © Davvey..";
					}
				}
		}
// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Set Door Type Options.	
			
	if (`optionMenu -q -sl DVY_ExternalDoorOption` > 1)
		{
			$Type = "External";
			$T = 0;
		}
		
	if (`optionMenu -q -sl DVY_InternalDoorOption` > 1)
		{
			$Type = "Internal";
			$T = 1;
		}
		
	$C = `radioButtonGrp -q -sl DoorCillRadioButtonGrp`;
	$N = `radioButtonGrp -q -sl DoorRadioButtonGrp`;
	$S = `radioButtonGrp -q -sl HingeRadioButtonGrp`;
	
	$InOut = `radioButtonGrp -q -sl HingeDirRadioButtonGrp`;
	$Ex = `optionMenu -q -sl  DVY_DoorFrameOption`;
	
	if ($N == 2) { $S = 1;}

// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Door Frame dimensions
		
	float $FD, $FW, $FH, $DD;
	
	if ($T == 1)		// Internal Door Frame Sections
		{		
			$FD = 100;			// Frame Depth
			$FW = 30;			// Frame Section Width
			$FH = 30;			// Frame Section Height
			$DD = 40 ;			// Door Width
			
		}
		
	if ($T == 0)		// External Door Frame Sections
		{		
			$FD = 75;			// Frame Depth
			$FW = 60;			// Frame Section Width
			$FH = 60;			// Frame Section Height
			$DD = 45;			// Door Thickness
		}
	
	float $DoorWidth = `floatField -q -v DFloatField_05` - $FW;
	float $DoorHeight = `floatField -q -v DFloatField_07` - $FH;
	float $FrameWidth = `floatField -q -v DFloatField_05`;
	float $FrameHeight = `floatField -q -v DFloatField_07`;
	float $FrameWidthP = 0;
		
	print ("Door Width is " + $DoorWidth + "\n");
	print ("Door Height is " + $DoorHeight + "\n");
	
	print ("Frame Width is " + $FrameWidth + "\n");
	print ("Frame Height is " + $FrameHeight + "\n");
	
	if (`optionMenu -q -sl DVY_DoorFrameOption` > 1)
		{
			$FrameWidthP = `floatFieldGrp -q -v1 DFloatFieldGrp_01`;
				print ("Panelled Frame Width is " + $FrameWidthP + "\n");
		}
	 
// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Set Sizes and Options for FrameMaker proc.
	// $Sizes = Door and Frame sizes 0 = Door Width, 	1 = Door Height,	2 = Door Thickness
	//								 3 = Frame Width , 	4 = Frame Height,	5 = Frame Thickness.
	// $Options = Door Hinge and opening.
	//			[0] = 0 = Inwards or 1 = Outwards,
	//			[1] = 0 = Left Hinge or 1 = Right Hinge
	//			[2] = 0 = No extension, or 1 = Left Extended Frame
	//				 or 2 = Right Left Extended Frame or 3 = Both Sides Extended Frame
	//			[3] = 0 = Full Glazed side Panel or 1 = Half Glazed Panels 
	//				  or 2 = Top Glass and Solid Bottom Panels
		
		$Sizes[0] = $DoorWidth;
		$Sizes[1] = $DoorHeight;
		$Sizes[2] = $DD;
		$Sizes[3] = $FrameWidthP;
		$Sizes[4] = $FrameHeight;
		$Sizes[5] = $FD;
		
		$Options[0] = $InOut;
		$Options[1] = $S;
	
	if (($Ex > 2) && ($Ex < 6)) { $Options[2] = 1;}
	if (($Ex > 5) && ($Ex < 9)) { $Options[2] = 2;}
	if (($Ex > 8) && ($Ex < 12)) { $Options[2] = 3;}
	
	if (($Ex == 3) || ($Ex == 6) || ($Ex == 9)) { $Options[3] = 0;}
	if (($Ex == 4) || ($Ex == 7) || ($Ex == 10)) { $Options[3] = 1;}
	if (($Ex == 5) || ($Ex == 8) || ($Ex == 11)) { $Options[3] = 2;}
		
// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Set Scaling unit for Global units used.
		
	DVY_ScaleSet;
	print ("Current units are " + $Units + " and Scale Factor $DVYUnit is " + $DVYUnit + "\n");
	
// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Section to Build Door Frame Group.	
	
	while(`objExists ($Type + "Door_Main_GrpN_" + $E)`)
		{
			$E++;	print ("$E is " + $E + "\n");
		}
	
		$DoorGrp[0] = `group -em -name ($Type + "Door_Main_GrpN_" + $E)`;
		$e = $E;

// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Section to Build Door Frame.	
	
	// External Door Frame
	if ($T == 0)	// External Door Frame Sections
		{	
			
			$DoorGrp[1] = DVY_DoorFrameMaker($T, $C, $E, $e, $Sizes, $Options);
		}
	
	// Internal Door
	if ($T == 1)	// Internal Door Frame Sections
		{	
			
			$DoorGrp[1] = DVY_DoorFrameMaker($T, $C, $E, $e, $Sizes, $Options);
		}
		
		parent $DoorGrp[1] $DoorGrp[0];

// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Section to Build Doors for Frame.
	// $P = Panel Type // $S = Hinge Position	// $F = Fixed or Hinged = $FixH[0];
	// $E = Group Number	// $E = Door Number	
		
	// $S = 1;	// 1 = "LeftHung_", 2 = "RightHung_"
		
	if ($N == 2) { $Sizes[0] = $Sizes[0] * 0.5;}
	// External Door Panel Option
	if ($T == 0)	
		{	
			if(`optionMenu -q -sl DVY_ExternalDoorOption` < 9)
				{ $P = `optionMenu -q -sl DVY_ExternalDoorOption` - 2;}
				
			if((`optionMenu -q -sl DVY_ExternalDoorOption` > 8) &&
				(`optionMenu -q -sl DVY_ExternalDoorOption` < 13))
				{ $P = `optionMenu -q -sl DVY_ExternalDoorOption` - 8;}
				
			if(`optionMenu -q -sl DVY_ExternalDoorOption` == 13){ $P = 6;}
			if(`optionMenu -q -sl DVY_ExternalDoorOption` == 14) { $P = 1;}
			if(`optionMenu -q -sl DVY_ExternalDoorOption` == 15) { $P = 2;}
			if(`optionMenu -q -sl DVY_ExternalDoorOption` == 16) { $P = 9;}
			if(`optionMenu -q -sl DVY_ExternalDoorOption` == 17) { $P = 9;}
			if(`optionMenu -q -sl DVY_ExternalDoorOption` == 18) { $P = 9;}
			if(`optionMenu -q -sl DVY_ExternalDoorOption` == 19) { $P = 4;}
			if(`optionMenu -q -sl DVY_ExternalDoorOption` == 20) { $P = 6;}
			
		}
		
	// Internal Door Panel Option
	if ($T == 1)	
		{	
			if(`optionMenu -q -sl DVY_InternalDoorOption` < 9)
				{ $P = `optionMenu -q -sl DVY_InternalDoorOption` - 2;}
				
			if((`optionMenu -q -sl DVY_InternalDoorOption` > 8) &&
				(`optionMenu -q -sl DVY_InternalDoorOption` < 13))
				{ $P = `optionMenu -q -sl DVY_InternalDoorOption` - 8;}
				
			if(`optionMenu -q -sl DVY_InternalDoorOption` == 13){ $P = 6;}
			if(`optionMenu -q -sl DVY_InternalDoorOption` == 14) { $P = 1;}
			if(`optionMenu -q -sl DVY_InternalDoorOption` == 15) { $P = 2;}
			if(`optionMenu -q -sl DVY_InternalDoorOption` == 16) { $P = 9;}
			if(`optionMenu -q -sl DVY_InternalDoorOption` == 17) { $P = 9;}
			if(`optionMenu -q -sl DVY_InternalDoorOption` == 18) { $P = 9;}
			if(`optionMenu -q -sl DVY_InternalDoorOption` == 19) { $P = 4;}
			if(`optionMenu -q -sl DVY_InternalDoorOption` == 20) { $P = 6;}
		}
		
		
		$Temps =  DVY_DoorMaker($T, $S, $P, $E, 1, $DoorHeight, $Sizes[0]);
		$DoorGrp[2] = $Temps[0];
		$DoorGrp[3] = $Temps[1];
		
		if ($InOut == 2)
			{
				xform -ws -r -piv 0 0 $DD $DoorGrp[2];
				move -r 0 0 $DD $DoorGrp[2];
			}
		
		parent $DoorGrp[2] $DoorGrp[0];
	
		if ($N == 2)
			{
				select -r $DoorGrp[2];
					$Temps = `duplicate -rr -renameChildren -un`;
					$DoorGrp[4] = $Temps[0];
					$DoorGrp[5] = $Temps[1];
						move -r ($DoorWidth * -0.25) 0 0 $DoorGrp[2];
						move -r ($DoorWidth * 0.75) 0 0 $DoorGrp[4];
						scale -1 1 1 $DoorGrp[4];
					transformLimits -ry -120 0 -ery 1 1 $DoorGrp[4];	
			}
					
		if ($S == 1)
			{ 
				if ($InOut == 2) { transformLimits -ry -120 0 -ery 1 1 $DoorGrp[2];}
					else { transformLimits -ry 0 120 -ery 1 1 $DoorGrp[2];}

			}
			
		if ($S == 2)
			{ if ($InOut == 2) { transformLimits -ry 0 120 -ery 1 1 $DoorGrp[2];}
					else { transformLimits -ry -120 0 -ery 1 1 $DoorGrp[2];}
			}
				
// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Scale finished unit.

	scale $DVYUnit $DVYUnit $DVYUnit $DoorGrp[0];
		select -r $DoorGrp[0];
		makeIdentity -apply true -t 1 -r 1 -s 1 -n 0;
		
// -------------------------------------------------------------------------------- //
	
// ******************************************************************************** //	
// Lock off attributes.
		
	string $AttrA[] = {".tx", ".ty", ".tz", ".rx", ".ry", ".rz", ".sx", ".sy", ".sz"};
	string $AttrB[] = {".rx", ".ry", ".rz", ".sx", ".sy", ".sz"};
	string $AttrR[] = {".rx", ".ry", ".rz"}; 
	string $AttrS[] = {".sx", ".sy", ".sz"};
	string $AttrT[] = {".tx", ".ty", ".tz"};
	
	select -r -hi $DoorGrp[0];
	string $DSel[] = `ls -tr -sl`;
	
	for ($i= 1; $i < size($DSel); $i++)
		{
			for ($Att in $AttrA)
				{ setAttr -l 1 -k 0 ($DSel[$i] + $Att); }
		}
		
	select -cl;
		catch (`select -r ("*GrpN_" + $E + "_DoorGrp_*")`);
		$DSel = `ls -tr -sl`;
		
		if (size ($DSel) > 0)
			{
				for ($i= 0; $i < size($DSel); $i++)
					{
						setAttr -l 0 -k 1 ($DSel[$i] + ".ry");
					}
			}
			
		for ($Att in $AttrS)
			{ setAttr -l 1 -k 0 ($DoorGrp[0] + $Att); }
			
	print "Completed building Door Davvey © 2006..\n";
		
}